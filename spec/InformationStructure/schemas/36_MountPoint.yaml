logical-termination-point:
  type: array
  x-key: local-id
  items:
    type: object
    required:
      - local-id
      - layer-protocol
    properties:
      local-id:
        type: string
        description: >
          'deviceName
          candidate: from [CDM://v1/establish-management-plane-transport$request.body#device-name]
                      or from [ logicalController = [CDM://v1/establish-controller-in-management-domain$request.body#management-domain]
                                [/network-control-domain=running/control-construct=[logicalController]/logical-termination-point=*/local-id] ]
          running: from candidate
          operational: from running; entire LTP to be deleted by [/network-control-domain=running/profile=[_template]/measure-list-of-mount-points-function-name], if deviceName not included in proprietary response of the Element'
      _template:
        type: string
        description: >
          'mountPointTemplateName
          candidate: from [ logicalController = ../_logical-controller
                            deviceName = ./local-id
                            [/network-control-domain=candidate/control-construct=[logicalController]/logical-termination-point=[deviceName]/_template] ]
          running: from candidate
          operational: from running'
      layer-protocol:
        type: array
        x-key: local-id
        minItems: 3
        maxItems: 3
        items:
          oneOf:
            - description: 'copyClient'
              type: object
              required:
                - local-id
              properties:
                local-id:
                  type: string
                  enum:
                    - 'copy-client'
            - description: 'netconfClient'
              type: object
              required:
                - local-id
                - netconf-user-name
                - netconf-password
              properties:
                local-id:
                  type: string
                  enum:
                    - 'netconf-client'
                netconf-user-name:
                  type: string
                  description: >
                    'Name of the user applied for authenticating at the MediatorProcess/device while initiating the Netconf connection
                    candidate: from [ logicalController = ../../_logical-controller
                                      deviceName = ../local-id
                                      [/network-control-domain=candidate/control-construct=[logicalController]/logical-termination-point=[deviceName]/layer-protocol=netconf-client/netconf-user-name] ]
                    running: from candidate
                    operational: set by [/network-control-domain=running/profile=[../_template]/measure-list-of-mount-points-function-name]'
                netconf-password:
                  type: string
                  description: >
                    'Password of the user applied for authenticating at the MediatorProcess/device while initiating the Netconf connection
                    candidate: from [ logicalController = ../../_logical-controller
                                      deviceName = ../local-id
                                      [/network-control-domain=candidate/control-construct=[logicalController]/logical-termination-point=[deviceName]/layer-protocol=netconf-client/netconf-password] ]
                    running: from candidate
                    operational: set by [/network-control-domain=running/profile=[../_template]/measure-list-of-mount-points-function-name]'
                notification-subscribe:
                  type: boolean
                  description: >
                    'If true, the automated subscribing for notifications while mounting is activated
                    candidate: from [ logicalController = ../../_logical-controller
                                      deviceName = ../local-id
                                      [/network-control-domain=candidate/control-construct=[logicalController]/logical-termination-point=[deviceName]/layer-protocol=netconf-client/notification-subscribe] ]
                    running: from candidate
                    operational: set by [/network-control-domain=running/profile=[../_template]/measure-list-of-mount-points-function-name]'
                notification-stream-name:
                  type: string
                  description: >
                    'Name of the stream for clients of ODL to identify it while subscribing
                    candidate: from [ logicalController = ../../_logical-controller
                                      deviceName = ../local-id
                                      [/network-control-domain=candidate/control-construct=[logicalController]/logical-termination-point=[deviceName]/layer-protocol=netconf-client/notification-stream-name] ]
                    running: from candidate
                    operational: set by [/network-control-domain=running/profile=[../_template]/measure-list-of-mount-points-function-name]'
                connection-status:
                  type: string
                  description: >
                    'Status of the connection between MountPoint and Device
                    candidate: ./.
                    running: ./.
                    operational: set by [/network-control-domain=running/profile=[../_template]/measure-list-of-mount-points-function-name]'
                session-id:
                  type: integer
                  description: >
                    'Locally unique ID of the connection between MountPoint and Device as it has been assigned by the Controller
                    candidate: ./.
                    running: ./.
                    operational: set by [/network-control-domain=running/profile=[../_template]/measure-list-of-mount-points-function-name]'
            - description: 'tcpClient'
              type: object
              required:
                - local-id
                - remote-ip-address
                - remote-port
              properties:
                local-id:
                  type: string
                  enum:
                    - 'tcp-client'
                remote-ip-address:
                  type: string
                  description: >
                    'IP address of the mediatorProcess
                    candidate: from [ logicalController = ../../_logical-controller
                                      deviceName = ../local-id
                                      [/network-control-domain=candidate/control-construct=[logicalController]/logical-termination-point=[deviceName]/layer-protocol=tcp-client/remote-ip-address] ]
                    running: from candidate
                    operational: set by [/network-control-domain=running/profile=[../_template]/measure-list-of-mount-points-function-name]'
                remote-port:
                  type: integer
                  description: >
                    'TCP port of the mediatorProcess
                    candidate: from [ logicalController = ../../_logical-controller
                                      deviceName = ../local-id
                                      [/network-control-domain=candidate/control-construct=[logicalController]/logical-termination-point=[deviceName]/layer-protocol=tcp-client/] ]
                    running: from candidate
                    operational: set by [/network-control-domain=running/profile=[../_template]/measure-list-of-mount-points-function-name]'
